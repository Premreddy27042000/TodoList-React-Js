{"version":3,"sources":["components/list.jsx","components/App.jsx","index.js"],"names":["ToDoItem","props","onClick","onChecked","id","text","App","useState","list","setList","items","setItems","deleteItem","prevItem","filter","item","index","className","onChange","event","target","value","type","required","map","todoItem","key","ReactDOM","render","document","getElementById"],"mappings":"4MAsBeA,MApBf,SAAkBC,GAShB,OACE,yBACEC,QAAS,WACPD,EAAME,UAAUF,EAAMG,MAGxB,4BAAKH,EAAMI,MALb,MCyCWC,MAnDf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAaA,SAASC,EAAWR,GAClBO,GAAS,SAACE,GACR,OAAOA,EAASC,QAAO,SAACC,EAAMC,GAC5B,OAAOA,IAAUZ,QAKvB,OACE,yBAAKa,UAAU,aACb,yBAAKA,UAAU,WACb,2CAEF,yBAAKA,UAAU,QACb,2BAAOC,SAzBb,SAAsBC,GACpBV,EAAQU,EAAMC,OAAOC,QAwBcC,KAAK,OAAOD,MAAOb,EAAMe,UAAQ,IAChE,4BAAQrB,QAtBd,WACES,GAAS,SAACE,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAqBL,OAEvBC,EAAQ,MAmBF,uCAGJ,6BACE,4BACGC,EAAMc,KAAI,SAACC,EAAUT,GAAX,OACT,kBAAC,EAAD,CACEU,IAAKV,EACLZ,GAAIY,EACJX,KAAMoB,EACNtB,UAAWS,WCxCzBe,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.c5ba9caf.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction ToDoItem(props) {\r\n  // const [isDone, setDone] = useState(false);\r\n\r\n  // function handleClick() {\r\n  //   setDone((prev) => {\r\n  //     return !prev;\r\n  //   });\r\n  // }\r\n\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        props.onChecked(props.id);\r\n      }}\r\n    >\r\n      <li>{props.text}</li>;\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoItem;\r\n// style={{ textDecoration: isDone ? \"line-through\" : \"null\" }}\r\n","import React, { useState } from \"react\";\nimport ToDoItem from \"./list\";\nfunction App() {\n  const [list, setList] = useState(\"\");\n\n  const [items, setItems] = useState([]);\n\n  function handleChange(event) {\n    setList(event.target.value);\n  }\n\n  function handleClick() {\n    setItems((prevItem) => {\n      return [...prevItem, list];\n    });\n    setList(\"\");\n  }\n\n  function deleteItem(id) {\n    setItems((prevItem) => {\n      return prevItem.filter((item, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <div className=\"form\">\n        <input onChange={handleChange} type=\"text\" value={list} required />\n        <button onClick={handleClick}>\n          <span>Add</span>\n        </button>\n      </div>\n      <div>\n        <ul>\n          {items.map((todoItem, index) => (\n            <ToDoItem\n              key={index}\n              id={index}\n              text={todoItem}\n              onChecked={deleteItem}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n"],"sourceRoot":""}